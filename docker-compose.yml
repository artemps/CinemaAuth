version: '3.7'

services:
  app:
    build: .
    container_name: app
    depends_on:
      - db
      - redis
    env_file:
      - .env
    restart: unless-stopped

  db:
    image: postgres:13
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: 123qwe
      POSTGRES_USER: app
      POSTGRES_DB: cinema_auth
    restart: unless-stopped

  db_admin:
    image: postgres:13
    container_name: admin_db
    volumes:
      - admin_postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: 123qwe
      POSTGRES_USER: app
      POSTGRES_DB: movies_database
    restart: always

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped

  elastic:
    image: elasticsearch:8.6.2
    container_name: elastic
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - es_data:/usr/share/elasticsearch/data
    restart: always

  nginx:
    image: nginx:1.25.3-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.default.conf.template:/etc/nginx/templates/default.conf.template:ro
    environment:
      - NGINX_HOST
      - APP_PORT
      - APP_HOST
    depends_on:
      - app

volumes:
  postgres_data:
  es_data:
  admin_postgres_data:
